---
dist: bionic
env:
  global:
    # When changing this, ensure that the Vagrantfile is updated as well
    - VAGRANT_VERSION="2.2.9"
    - BASE_BOX_VAGRANT_VM_ID="base-box-builder.k8s-play.local"
jobs:
  fast_finish: true
  include:
    - name: "Linting"
      cache:
        directories:
          - $HOME/.cache/pip
          - $HOME/.vagrant.d/boxes
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
          - vendor/bundle
          - $GOPATH/pkg/mod
          - /var/lib/docker/overlay2
      language: shell
      install:
        - sudo apt-get update
        - sudo apt-get install coreutils python3 python3-pip
        - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
        - nvm install
        - NVM_DIR="${HOME}/.nvm" && [ -s $NVM_DIR/nvm.sh ] && . $NVM_DIR/nvm.sh
        - nvm use
        - scripts/linux/ci/install-linting-tools.sh
      script: |
        scripts/linux/ci/lint.sh || exit 1;
        scripts/linux/ci/build-docker-images.sh || exit 1;
      stage: linting_and_docker
      after_failure:
        - scripts/linux/ci/diagnostics.sh
    - name: "Build base box"
      env:
        - VAGRANT_DEFAULT_PROVIDER=libvirt
      stage: vagrant-base-box
      before_install:
        - sudo scripts/linux/ci/install-libvirt.sh
        - sudo scripts/linux/ci/install-vagrant.sh
        - sudo scripts/linux/ci/install-vagrant-plugins.sh
        - sudo scripts/linux/ci/generate-env-for-travis.sh
        # Fix permissions after installing vagrant plugins with sudo
        - sudo chown -R travis:travis $HOME/.vagrant.d
        # This doesn't have effect if you don't open a new shell
        - sudo adduser "$(id -un)" libvirt
        - sudo adduser "$(id -un)" kvm
      before_script:
        - inspec check --chef-license=accept test/inspec/kubernetes-playground
        # Workaround for https://github.com/hashicorp/vagrant/issues/8279
        - chmod a+rx $HOME
        - |
          sudo \
          PATH="$PATH" \
          VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
          scripts/linux/ci/diagnostics.sh
      cache:
        directories:
          - $HOME/.cache/pip
          - $HOME/.vagrant.d/boxes
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
          - vendor/bundle
          - $GOPATH/pkg/mod
          - /var/lib/docker/overlay2
      install:
        - gem install bundler
        - bundle install
      language: ruby
      # Run with sudo because the libvirt socket is owned by the libvirt group,
      # and the current user was added to the group in the current session,
      # so the membership to that group is not yet in effect.
      # Set the PATH to make the installed gems accessible.
      script: |
        time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant up "$BASE_BOX_VAGRANT_VM_ID"; \
        time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        VAGRANT_SUPPRESS_OUTPUT="true" \
        scripts/linux/ci/run-inspec-against-host.sh "$BASE_BOX_VAGRANT_VM_ID";
        time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant package "$BASE_BOX_VAGRANT_VM_ID" \
            --output kubernetes-playground-base.box;
        time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant destroy --force "$BASE_BOX_VAGRANT_VM_ID"; \
        time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant box add --force kubernetes-playground-base.box \
            --name ferrarimarco/kubernetes-playground-node;
      after_failure:
        - |
          sudo \
          PATH="$PATH" \
          VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
          scripts/linux/ci/diagnostics.sh --vagrant-vm-name "$BASE_BOX_VAGRANT_VM_ID"
    - name: "Start the cluster"
      language: ruby
      stage: vagrant-up
      env:
        - VAGRANT_DEFAULT_PROVIDER=libvirt
      cache:
        directories:
          - $HOME/.cache/pip
          - $HOME/.vagrant.d/boxes
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
          - vendor/bundle
          - $GOPATH/pkg/mod
          - /var/lib/docker/overlay2
      install:
        - sudo apt-get update
        - sudo apt-get install coreutils
        - sudo scripts/linux/ci/install-libvirt.sh
        - sudo scripts/linux/ci/install-vagrant.sh
        - sudo scripts/linux/ci/install-vagrant-plugins.sh
        - sudo scripts/linux/ci/generate-env-for-travis.sh
        # Fix permissions after installing vagrant plugins with sudo
        - sudo chown -R travis:travis $HOME/.vagrant.d
        # This doesn't have effect if you don't open a new shell
        - sudo adduser "$(id -un)" libvirt
        - sudo adduser "$(id -un)" kvm
      before_script:
        # Workaround for https://github.com/hashicorp/vagrant/issues/8279
        - chmod a+rx $HOME
        - |
          sudo \
          PATH="$PATH" \
          VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
          scripts/linux/ci/diagnostics.sh
      # Run with sudo because the libvirt socket is owned by the libvirt group,
      # and the current user was added to the group in the current session,
      # so the membership to that group is not yet in effect.
      # Set the PATH to make the installed gems accessible.
      script: |
        timeout 9m time sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant up k8s-master-1.k8s-play.local --no-provision;
      after_script:
        - |
          sudo \
          PATH="$PATH" \
          VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
          scripts/linux/ci/diagnostics.sh
      after_failure:
        - |
          sudo \
          PATH="$PATH" \
          VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
          scripts/linux/ci/diagnostics.sh --vagrant-vm-name k8s-master-1.k8s-play.local
language: shell
os: linux
services:
  - docker
stages:
  - linting_and_docker
  - vagrant-base-box
  - vagrant-up
