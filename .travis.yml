---
dist: bionic
env:
  global:
    # When changing this, ensure that the Vagrantfile is updated as well
    - VAGRANT_VERSION="2.2.9"
    - BASE_BOX_VAGRANT_VM_ID="base-box-builder.k8s-play.local"
jobs:
  fast_finish: true
  include:
    - name: "Linting"
      before_cache:
        # Save tagged docker images
        - >
          mkdir -p $HOME/docker \
          && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
          | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
      cache:
        directories:
          - $HOME/.cache/pip
          - $HOME/.vagrant.d/boxes
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
          - ./kubernetes-playground-base.box
          - vendor/bundle
          - $GOPATH/pkg/mod
          - $HOME/docker
      language: shell
      before_install:
        # Load cached docker images
        - if [ -d $HOME/docker ]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
      install:
        - sudo apt-get update
        - sudo apt-get install python3 python3-pip
        - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
        - nvm install
        - NVM_DIR="${HOME}/.nvm" && [ -s $NVM_DIR/nvm.sh ] && . $NVM_DIR/nvm.sh
        - nvm use
        - scripts/linux/ci/install-linting-tools.sh
      script: scripts/linux/ci/lint.sh
      stage: linting_and_docker
      after_failure:
        - scripts/linux/ci/diagnostics.sh
    - name: "Build kitesproject/net-tests container images"
      before_cache:
        # Save tagged docker images
        - >
          mkdir -p $HOME/docker \
          && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
          | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
      cache:
        directories:
          - $HOME/.cache/pip
          - $HOME/.vagrant.d/boxes
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
          - ./kubernetes-playground-base.box
          - vendor/bundle
          - $GOPATH/pkg/mod
          - $HOME/docker
      language: shell
      before_install:
        # Load cached docker images
        - if [ -d $HOME/docker ]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
      before_script: cd docker/kites/net-tests
      script: |
        docker build --target final -t kitesproject/net-test . || exit 1; \
        docker build --target dev -t kitesproject/net-test:latest-dev . || exit 1
    - name: "Build ferrarimarco/kubernetes-playground-ansible container image"
      before_cache:
        # Save tagged docker images
        - >
          mkdir -p $HOME/docker \
          && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
          | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
      cache:
        directories:
          - $HOME/.cache/pip
          - $HOME/.vagrant.d/boxes
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
          - ./kubernetes-playground-base.box
          - vendor/bundle
          - $GOPATH/pkg/mod
          - $HOME/docker
      language: shell
      before_install:
        # Load cached docker images
        - if [ -d $HOME/docker ]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
      before_script: cd docker/ansible
      script: docker build -t ferrarimarco/kubernetes-playground-ansible .
    - name: "Build base box"
      after_script:
        - |
          sudo \
          PATH="$PATH" \
          VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
          scripts/linux/ci/diagnostics.sh
      env:
        - VAGRANT_DEFAULT_PROVIDER=libvirt
      stage: vagrant-base-box
      before_install:
        # Load cached docker images
        - if [ -d $HOME/docker ]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
        - sudo scripts/linux/ci/install-libvirt.sh
        - sudo scripts/linux/ci/install-vagrant.sh
        - sudo scripts/linux/ci/install-vagrant-plugins.sh
        - sudo scripts/linux/ci/generate-env-for-travis.sh
        # Fix permissions after installing vagrant plugins with sudo
        - sudo chown -R travis:travis $HOME/.vagrant.d
        # This doesn't have effect if you don't open a new shell
        - sudo adduser "$(id -un)" libvirt
        - sudo adduser "$(id -un)" kvm
      before_script:
        - inspec check --chef-license=accept test/inspec/kubernetes-playground
        # Workaround for https://github.com/hashicorp/vagrant/issues/8279
        - chmod a+rx $HOME
        - |
          sudo \
          PATH="$PATH" \
          VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
          scripts/linux/ci/diagnostics.sh
        - |
          sudo rm ./kubernetes-playground-base.box
      before_cache:
        # Save tagged docker images
        - >
          mkdir -p $HOME/docker \
          && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
          | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
      cache:
        directories:
          - $HOME/.cache/pip
          - $HOME/.vagrant.d/boxes
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
          - ./kubernetes-playground-base.box
          - vendor/bundle
          - $GOPATH/pkg/mod
          - $HOME/docker
      install:
        - gem install bundler
        - bundle install
      language: ruby
      # Run with sudo because the libvirt socket is owned by the libvirt group,
      # and the current user was added to the group in the current session,
      # so the membership to that group is not yet in effect.
      # Set the PATH to make the installed gems accessible.
      script: |
        sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant up "$BASE_BOX_VAGRANT_VM_ID"; \
        sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        VAGRANT_SUPPRESS_OUTPUT="true" \
        scripts/linux/ci/run-inspec-against-host.sh "$BASE_BOX_VAGRANT_VM_ID";
        sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant package "$BASE_BOX_VAGRANT_VM_ID" \
            --output kubernetes-playground-base.box;
        sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant destroy --force "$BASE_BOX_VAGRANT_VM_ID";
    - name: "Build base box and start the cluster"
      stage: vagrant-up
      after_script:
        - |
          sudo \
          PATH="$PATH" \
          VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
          scripts/linux/ci/diagnostics.sh
      env:
        - VAGRANT_DEFAULT_PROVIDER=libvirt
      before_install:
        # Load cached docker images
        - if [ -d $HOME/docker ]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
        - sudo scripts/linux/ci/install-libvirt.sh
        - sudo scripts/linux/ci/install-vagrant.sh
        - sudo scripts/linux/ci/install-vagrant-plugins.sh
        - sudo scripts/linux/ci/generate-env-for-travis.sh
        # Fix permissions after installing vagrant plugins with sudo
        - sudo chown -R travis:travis $HOME/.vagrant.d
        # This doesn't have effect if you don't open a new shell
        - sudo adduser "$(id -un)" libvirt
        - sudo adduser "$(id -un)" kvm
      before_script:
        # Workaround for https://github.com/hashicorp/vagrant/issues/8279
        - chmod a+rx $HOME
        - |
          sudo \
          PATH="$PATH" \
          VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
          scripts/linux/ci/diagnostics.sh
      before_cache:
        # Save tagged docker images
        - >
          mkdir -p $HOME/docker \
          && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
          | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
      cache:
        directories:
          - $HOME/.cache/pip
          - $HOME/.vagrant.d/boxes
          - $HOME/.vagrant.d/gems
          - $GEM_HOME
          - ./kubernetes-playground-base.box
          - vendor/bundle
          - $GOPATH/pkg/mod
          - $HOME/docker
      install:
        - sudo \
          PATH="$PATH" \
          VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
          vagrant box add --force kubernetes-playground-base.box \
              --name ferrarimarco/kubernetes-playground-node;
      language: ruby
      # Run with sudo because the libvirt socket is owned by the libvirt group,
      # and the current user was added to the group in the current session,
      # so the membership to that group is not yet in effect.
      # Set the PATH to make the installed gems accessible.
      script: |
        sudo \
        PATH="$PATH" \
        VAGRANT_DEFAULT_PROVIDER="$VAGRANT_DEFAULT_PROVIDER" \
        vagrant up k8s-master-1.k8s-play.local --no-provision;
language: shell
os: linux
services:
  - docker
stages:
  - linting_and_docker
  - vagrant-base-box
  - vagrant-up
