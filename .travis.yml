---
env:
  global:
    - VAGRANT_VERSION="2.2.6"
jobs:
  fast_finish: true
  include:
    - before_install: gem install travis --no-document
      name: "Travis lint"
      stage: linting
      script: echo "n" | travis lint
    - name: "Shellcheck"
      language: shell
      script: |
        for file in $(find "$(pwd)" \
          -type f \
          -not -path "*/\.git/*" \
          -not -name "*.md" \
          -exec grep -Eq '^#!(.*/|.*env +)(sh|bash|ksh)' {} \; -print); do \
            f="${file#$(pwd)}"; \
            f="${f/\//}"; \
            echo "Linting $f"; \
            docker run -v "$(pwd)":/mnt:ro --rm -t koalaman/shellcheck:v0.7.0 \
              "$f" || exit 1; \
        done;
    - name: "YAMLlint"
      language: shell
      install: sudo pip install -r requirements.txt
      script: yamllint --strict $(git ls-files '*.yaml' '*.yml') || exit 1
    - name: "Markdownlint"
      install: npm install
      language: node_js
      node_js: node
      script: |
        find -name "*.md" -not -path "*/node_modules/*" \
        | xargs markdownlint || exit 1
    - name: "Vagrant validate"
      install:
        - |
          TEMP_DEB="$(mktemp)" \
          && wget -O "$TEMP_DEB" \
            "https://releases.hashicorp.com/vagrant/${VAGRANT_VERSION}/vagrant_${VAGRANT_VERSION}_x86_64.deb" \
          && sudo dpkg -i "$TEMP_DEB"
        - vagrant plugin install vagrant-hostsupdater
      language: shell
      script: vagrant validate --ignore-provider
    - name: "Whitespace error check"
      language: shell
      script: git diff-tree --check $(git hash-object -t tree /dev/null) HEAD
    - name: "Missing EOF newlines check"
      language: shell
      script: |
        find "$(pwd)" -type f -not -path "*/\.git/*" >tmp; \
        while IFS= read -r file; do \
          case "$(git diff --no-index --numstat /dev/null "$file")" in \
            "$(printf '%s\t-\t' -)"*) echo "skipping newline check for $file because it's a binary"; continue ;; \
            *) echo "Checking $file"; [ -z "$(tail -c1 "$file")" ] || exit 1 ;; \
          esac; \
        done <tmp; \
        rm tmp;
    - name: "shfmt"
      language: go
      before_install: GO111MODULE=on go get mvdan.cc/sh/v3/cmd/shfmt
      script: shfmt -d . || exit 1;
    - name: kubeval
      language: shell
      script: |
        docker run -t \
          -v "$(pwd)":/kubernetes-playground:ro \
          garethr/kubeval:0.14.0 \
          --strict  -d /kubernetes-playground/kubernetes
    - name: "ansible-lint"
      before_script: cd ansible || exit 1
      install: sudo pip install -r requirements.txt
      language: shell
      script: |
        ansible-lint -v \
          kubernetes.yml \
          openssl-self-signed-certificate.yml \
        || exit 1
    - name: "Test Kitchen"
      before_script: kitchen diagnose
      install:
        - gem install bundler
        - bundle install || exit 1
        - |
          TEMP_DEB="$(mktemp)" \
          && wget -O "$TEMP_DEB" \
            "https://releases.hashicorp.com/vagrant/${VAGRANT_VERSION}/vagrant_${VAGRANT_VERSION}_x86_64.deb" \
          && sudo dpkg -i "$TEMP_DEB"
        - vagrant plugin install vagrant-hostsupdater
      language: ruby
      script: |
        kitchen list \
        || exit 1
os: linux
services:
  - docker
stages:
  - linting
