---
- hosts: all
  gather_facts: yes
  post_tasks:
    - name: Get IP address corresponding to the interface with the specified broadcast address
      changed_when: no
      shell: "/usr/sbin/ip addr | grep {{broadcast_address}} | awk -F'[ /]+' '{print $3}'"
      register: ip_addr_broadcast
    - name: Initialize an IPv6 interface
      become: yes
      shell: "/vagrant/scripts/linux/configure-ipv6-interface.sh {{ipv6_address}} {{hostvars[inventory_hostname]['ansible_env'].SSH_CONNECTION.split(' ')[2]}} {{subnet_mask_ipv6}}"
      when: ipv6_address is defined
    - name: Configure Kubelet
      become: yes
      template:
        backup: no
        dest: /usr/lib/systemd/system/kubelet.service.d/90-node-ip.conf
        group: root
        mode: 0755
        owner: root
        src: templates/90-node-ip.conf.j2
      register: configure_kubelet
    - name: Force systemd to reread configs
      become: yes
      systemd:
        daemon_reload: yes
      when: configure_kubelet.changed
    - name: Generate Kubeadm configuration file
      become: yes
      template:
        backup: no
        dest: /tmp/kubeadm-config.yaml
        group: root
        mode: 0755
        owner: root
        src: templates/kubeadm-config.yaml.j2
      when: inventory_hostname == kubernetes_master_1_ip
    - name: Generate Calico configuration file
      become: yes
      template:
        backup: no
        dest: /tmp/calico-config.yaml
        group: root
        mode: 0755
        owner: root
        src: templates/calico-config.yaml.j2
      when: inventory_hostname == kubernetes_master_1_ip
    - name: Generate Flannel configuration file
      become: yes
      template:
        backup: no
        dest: /tmp/kube-flannel-config.yaml
        group: root
        mode: 0755
        owner: root
        src: templates/kube-flannel-config.yaml.j2
      when: inventory_hostname == kubernetes_master_1_ip
    - name: Initialize Kubernetes cluster (master)
      become: yes
      shell: "/vagrant/scripts/linux/bootstrap-kubernetes-{{kubernetes_classifier}}.sh /tmp/kubeadm-config.yaml {{kubernetes_network_plugin}}"
      args:
        creates: /home/vagrant/.kube/config
      when: inventory_hostname == kubernetes_master_1_ip
    - name: Initialize Kubernetes cluster (workers)
      become: yes
      shell: "/vagrant/scripts/linux/bootstrap-kubernetes-{{kubernetes_classifier}}.sh {{kubernetes_master_1_ip}} {{kubeadm_token}} {{cluster_ip_cidr}} {{kubernetes_network_plugin}} {{playground_name}}"
      args:
        creates: /etc/kubernetes/kubelet.conf
      when: "'kubernetes-minions' in group_names"
    - name: Download gluster-kubernetes
      become: yes
      unarchive:
        creates: /opt/gluster-kubernetes-master/deploy/gk-deploy
        dest: /opt
        remote_src: yes
        src: https://github.com/gluster/gluster-kubernetes/archive/master.zip
      when: "'kubernetes-masters' in group_names"
    - name: Configure registry name resolution in hosts file
      become: yes
      lineinfile:
        path: /etc/hosts
        regexp: "^{{kubernetes_master_1_ip}}"
        line: "{{kubernetes_master_1_ip}} {{docker_registry_host}}"
        owner: root
        group: root
        mode: 0644
  roles:
    - role: ferrarimarco.kubernetes
      become: yes
      ferrarimarco_kubernetes_filesystem: glusterfs
    - role: andrewrothstein.kubernetes-helm
      become: yes
