---
# General configuration parameters.
conf:
  # The values you specify here will be added as additional arguments when
  # Ansible is invoked during the provisioning phase. For example, you might
  # enable Ansible verbose output by setting this to "-vv".
  additional_ansible_arguments: ""
  # Size of the additional disk to attach to each VM of the cluster.
  # Useful to evaluate/test storage solutions. Set it to 0 to avoid attaching
  # a disk.
  additional_disk_size: 10240
  # RAM memory assigned to the base box.
  base_box_builder_mem: 2048
  # RAM memory assigned to master nodes.
  master_mem: 2048
  # RAM memory assigned to worker nodes.
  minion_mem: 1024
  # DNS domain name of the playground.
  playground_name: k8s-play
  # Base box VM name.
  base_box_builder_name: base-box-builder
  # Master node name.
  master_name: k8s-master-1
  # The default Vagrant provider. Allowed values are: virtualbox, libvirt.
  # After setting this, you need to also follow the instructions in the official
  # Vagrant documentation to choose the default provider, if you've more than
  # one provider installed:
  # https://www.vagrantup.com/docs/providers/basic_usage.html
  vagrant_provider: virtualbox
  # Vagrant boxes IDs.
  kubernetes_nodes_base_box_id:
    # ID of the Vagrant box for the Virtualbox provider.
    virtualbox: "debian/contrib-buster64"
    # ID of the Vagrant box for the libvirt provider.
    libvirt: "debian/buster64"
# Kubernetes configuration parameters.
kubernetes:
  # If set to true, allows scheduling pods on master nodes.
  allow_workloads_on_masters: false
  # Number of master nodes to provision
  # we currently support only one master node
  master_nodes_count: 1
  # Number of worker nodes to provision
  worker_nodes_count: 2
  # Labels to add to cluster nodes
  node_labels:
    # List of labels to apply to all nodes
    all:
      # Example label that will be applied to all nodes
      - label_key: kubernetes_playground_node
        label_value: true
    # List of labels to apply to all master nodes
    masters:
      # Example label that will be applied to all master nodes
      - label_key: kubernetes_playground_node_type
        label_value: master
    # List of labels to apply to all worker nodes
    workers:
      # Example label that will be applied to all worker nodes
      - label_key: kubernetes_playground_node_type
        label_value: worker
    # Add labels to specific nodes, selected by name
    by_node_name:
      # Example label that will be applied to the k8s-master-1 node
      k8s-master-1:
        - label_key: kubernetes_playground_main_master
          label_value: true

# Network configuration parameters.
net:
  # base MAC address for master(s)
  master_base_mac_address: 0800271F9D03
  # base MAC address for master(s)
  minion_base_mac_address: 0800271F9D13
  # IPv4 network prefix.
  network_prefix: "192.168.0."
  # IPv6 network prefix.
  network_prefix_ipv6: "fde4:8dba:82e1:"
  # IPv4 subnet mask.
  subnet_mask: "255.255.255.0"
  # IPv6 subnet mask.
  subnet_mask_ipv6: "56"
  # IPv4 base address for master(s) (integer)
  master_ipv4_base: 10
  # IPv4 base address for minions (integer)
  minion_ipv4_base: 30
  # IPv6 address suffix for the master node
  # must be a string with 4 hex digits followed by "::"
  master_ipv6_part: "c40a::"
  # base IPv6 address suffix for the minion nodes.
  # must be a string with 4 hex digits followed by "::"
  # minion_ipv6_part: "c41e:"
  minion_ipv6_part: "0001::"
  # delta of IPv6 address suffix for each minion node (integer)
  delta_ipv6: 1
  # host part of the IPv6 address of nodes
  default_ipv6_host_part: "1"
  # libvirt management network subnet.
  libvirt_management_network_address: "192.168.121.0/24"
# Kubernetes network configuration parameters.
pod_network:
  # Cluster IP CIDR.
  cluster_ip_cidr: "10.244.0.0/16"
  # Service IP CIDR.
  service_ip_cidr: "10.96.0.0/12"
# Ansible variables.
ansible:
  # Ansible group variables.
  group_vars:
    # Variables for the "all" group. Variables defined here will be available
    # to all nodes.
    all:
      # The networking plugin used by kubernetes, supported plugins are:
      # weavenet, calico, flannel, in addition "no-cni-plugin" prepares
      # the environment but does not boostrap the kubernetes cluster.
      # Set true the one you choose (default: calico), set false all the others.
      kubernetes_network_plugin_options:
        no-cni-plugin: false
        calico: true
        weavenet: false
        flannel: false
      calico_config:
        # calico tunnel mode (IPIP or VXLAN)
        calico_env_var_options:
          CALICO_IPV4POOL_IPIP: true
          CALICO_IPV4POOL_VXLAN: false
        # configuration of calico tunnel mode
        calico_env_var_value_options:
          Always: true
          CrossSubnet: false
          Never: false
      # Mirror where to download helm. Configurable to allow for an eventual
      # air gapped environment.
      kubernetes_helm_mirror: https://get.helm.sh
      # Helm version to install.
      kubernetes_helm_ver: v2.16.3
      # Helm OS build to install.
      kubernetes_helm_os: linux
      # Helm architecture to install.
      kubernetes_helm_arch: amd64
      # Helm archive extension.
      kubernetes_helm_archive_type: tar.gz
      # Helm binary destination directory.
      kubernetes_helm_bin_dir: "/usr/local/bin"
      # Checksums for Helm packages.
      kubernetes_helm_checksums:
        v2.16.3:
          # https://get.helm.sh/helm-v2.16.3-linux-amd64.tar.gz.sha256
          linux-amd64: sha256:9678eb726d6870e8eded204190357a0f494ed9d1803781b4bb80dde6427b086e
        v3.1.2:
          # https://get.helm.sh/helm-v3.1.2-linux-amd64.tar.gz.sha256
          linux-amd64: sha256:e6be589df85076108c33e12e60cfb85dcd82c5d756a6f6ebc8de0ee505c9fd4c
    # Variables for the "kubernetes-masters" group. Variables defined here will
    # be available to the nodes in the "kubernetes-masters" group.
    kubernetes-masters:
    # Variables for the "kubernetes-minions" group. Variables defined here will
    # be available to the nodes in the "kubernetes-minions" group.
    kubernetes-minions:
